package com.acmeplex.model;

import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Column;
import jakarta.persistence.Table;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.JoinColumn;

/**
 * This class represents a Receipt entity, which maps to the "Receipt" table in the database.
 * It contains details of a receipt, such as the email of the user, payment details, and ticket information.
 * Author: Riley Koppang
 */
@Entity
@Table(name = "Receipt")
public class Receipt {

    /*
     * Primary key of the Receipt table.
     * The receiptId value will be automatically generated by the database when a new Receipt entity is created.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "receiptId", nullable = false)
    private int receiptId;

    /*
     * Column for the email address of the user receiving the receipt.
     * The email cannot be NULL, as it is an essential part of the receipt.
     */
    @Column(name = "email", nullable = false)
    private String email;

    /*
     * Foreign key relationship to the Payment entity.
     * Each receipt is associated with a specific payment, and this field maps to the paymentId column in the database.
     * The payment cannot be NULL as a receipt must correspond to a payment.
     */
    @ManyToOne
    @JoinColumn(name = "paymentId", nullable = false)
    private Payment payment;

    /*
     * Foreign key relationship to the Ticket entity.
     * Each receipt is associated with a specific ticket, and this field maps to the ticketId column in the database.
     * The ticket cannot be NULL, as a receipt must correspond to a ticket.
     */
    @ManyToOne
    @JoinColumn(name = "ticketId", nullable = false)
    private Ticket ticket;

    /*
     * Default constructor required by Hibernate for JPA entities.
     * This constructor is used by Hibernate when creating an instance of the Receipt class.
     */
    public Receipt() {
    }

    /*
     * Parameterized constructor to create a Receipt instance with specific details.
     *
     * @param email The email address of the user receiving the receipt
     * @param payment The Payment entity associated with the receipt
     * @param ticket The Ticket entity associated with the receipt
     */
    public Receipt(String email, Payment payment, Ticket ticket) {
        this.email = email;
        this.payment = payment;
        this.ticket = ticket;
    }

    /*
     * Gets the receipt ID.
     *
     * @return The unique ID for the receipt
     */
    public int getReceiptId() {
        return receiptId;
    }

    /*
     * Sets the receipt ID.
     *
     * @param receiptId The unique ID for the receipt
     */
    public void setReceiptId(int receiptId) {
        this.receiptId = receiptId;
    }

    /*
     * Gets the email address of the user receiving the receipt.
     *
     * @return The email address
     */
    public String getEmail() {
        return email;
    }

    /*
     * Sets the email address of the user receiving the receipt.
     *
     * @param email The email address
     */
    public void setEmail(String email) {
        this.email = email;
    }

    /*
     * Gets the Payment entity associated with this receipt.
     *
     * @return The Payment entity
     */
    public Payment getPayment() {
        return payment;
    }

    /*
     * Sets the Payment entity associated with this receipt.
     *
     * @param payment The Payment entity
     */
    public void setPayment(Payment payment) {
        this.payment = payment;
    }

    /*
     * Gets the Ticket entity associated with this receipt.
     *
     * @return The Ticket entity
     */
    public Ticket getTicket() {
        return ticket;
    }

    /*
     * Sets the Ticket entity associated with this receipt.
     *
     * @param ticket The Ticket entity
     */
    public void setTicket(Ticket ticket) {
        this.ticket = ticket;
    }
}
