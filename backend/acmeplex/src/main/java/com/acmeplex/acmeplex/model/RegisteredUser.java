package com.acmeplex.model;

import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Column;
import jakarta.persistence.Table;

/**
 * This class represents a RegisteredUser entity, which maps to the "RegisteredUser" table in the database.
 * It contains the details of a user, such as their name, email, password, and credit card information.
 * Author: Riley Koppang
 */
@Entity
@Table(name = "RegisteredUser")
public class RegisteredUser {

    /*
     * Primary key of the RegisteredUser table.
     * The userId value will be automatically generated by the database when a new RegisteredUser entity is created.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "userId")
    private int userId;

    /*
     * Column for the user's name.
     * The name cannot be NULL and is limited to 255 characters.
     */
    @Column(name = "name", nullable = false, length = 255)
    private String name;

    /*
     * Column for the user's email address.
     * The email cannot be NULL and is limited to 255 characters.
     */
    @Column(name = "email", nullable = false)
    private String email;

    /*
     * Column for the user's password.
     * The password cannot be NULL and is limited to 255 characters.
     */
    @Column(name = "password", length = 255)
    private String password;

    /*
     * Column for the user's credit card number.
     * This field is nullable, as not all users may provide a credit card.
     */
    @Column(name = "creditCardNumber", nullable = true)
    private String creditCardNumber;

    /*
     * Column for the user's credit card CVV.
     * This field is nullable, as not all users may provide a CVV.
     */
    @Column(name = "creditCardCVV", nullable = true)
    private String creditCardCVV;

    /*
     * Column for the user's credit card expiry date.
     * This field is nullable, as not all users may provide an expiry date.
     */
    @Column(name = "creditCardExpiryDate", nullable = true)
    private String creditCardExpiryDate;

    /*
     * Column for the regstered user membership expiry date
     * This field is nullable, as not all users may provide an expiry date.
     */
    @Column(name = "membershipPurchaseDate", nullable = true)
    private java.sql.Date membershipPurchaseDate;

    /*
     * Default constructor required by Hibernate for JPA entities.
     * This constructor is used by Hibernate when creating an instance of the RegisteredUser class.
     */
    public RegisteredUser() {}

    /*
     * Parameterized constructor to create a RegisteredUser instance with specific details.
     *
     * @param name The name of the user
     * @param email The email address of the user
     * @param password The user's password
     */
    public RegisteredUser(String name, String email, String password, java.sql.Date membershipPurchaseDate) {
        this.name = name;
        this.email = email;
        this.password = password;
        this.membershipPurchaseDate = membershipPurchaseDate;

    }

    /*
     * Retrieves the user ID.
     * The user ID is generated automatically by the database.
     *
     * @return The unique ID for the user
     */
    public int getUserId() {
        return this.userId;
    }

    /*
     * Retrieves the user's name.
     *
     * @return The name of the user
     */
    public String getName() {
        return this.name;
    }

    /*
     * Retrieves the user's email address.
     *
     * @return The email address of the user
     */
    public String getEmail() {
        return this.email;
    }

    /*
     * Retrieves the user's password.
     *
     * @return The password of the user
     */
    public String getPassword() {
        return this.password;
    }

    /*
     * Retrieves the user's credit card number.
     * This is a nullable field and may not be available for all users.
     *
     * @return The credit card number, or null if not provided
     */
    public String getCreditCardNumber() {
        return this.creditCardNumber;
    }

    /*
     * Sets the user's credit card number.
     *
     * @param creditCardNumber The credit card number to be set
     */
    public void setCreditCardNumber(String creditCardNumber) {
        this.creditCardNumber = creditCardNumber;
    }

    /*
     * Retrieves the user's credit card CVV.
     * This is a nullable field and may not be available for all users.
     *
     * @return The credit card CVV, or null if not provided
     */
    public String getCreditCardCVV() {
        return this.creditCardCVV;
    }

    /*
     * Sets the user's credit card CVV.
     *
     * @param creditCardCVV The credit card CVV to be set
     */
    public void setCreditCardCVV(String creditCardCVV) {
        this.creditCardCVV = creditCardCVV;
    }

    /*
     * Retrieves the user's credit card expiry date.
     * This is a nullable field and may not be available for all users.
     *
     * @return The credit card expiry date, or null if not provided
     */
    public String getCreditCardExpiryDate() {
        return this.creditCardExpiryDate;
    }

    /*
     * Sets the user's credit card expiry date.
     *
     * @param expiryDate The credit card expiry date to be set
     */
    public void setCreditCardExpiryDate(String expiryDate) {
        this.creditCardExpiryDate = expiryDate;
    }


        /*
     * Retrieves the user's membership purchase date.
     * This is a nullable field and may not be available for all users.
     *
     * @return The credit card expiry date, or null if not provided
     */
    public java.sql.Date getMembershipPurchaseDate() {
        return this.membershipPurchaseDate;
    }

    /*
     * Sets the user's membership purchase date
     *
     * @param membershipPurchaseDate the day the membership fee was processed
     */
    public void setMembershipPurchaseDate(java.sql.Date membershipPurchaseDate) {
        this.membershipPurchaseDate = membershipPurchaseDate;
    }

}
