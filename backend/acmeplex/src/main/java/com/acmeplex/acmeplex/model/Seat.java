package com.acmeplex.model;

import jakarta.persistence.Entity;
import jakarta.persistence.Id;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Column;
import jakarta.persistence.Table;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.JoinColumn;

/**
 * This class represents a Seat entity, which maps to the "Seat" table in the database.
 * It contains details about a seat such as its number, row, the associated showtime, and the ticket.
 * Author: Riley Koppang
 */
@Entity
@Table(name = "Seat") // Table representing seats in the cinema
public class Seat {

    /*
     * Primary key of the Seat table.
     * The seatId value will be automatically generated by the database when a new Seat entity is created.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "seatId", nullable = false)
    private int seatId;

    /*
     * Column for the seat number.
     * The seat number cannot be NULL, ensuring each seat in a row has a unique identifier.
     */
    @Column(name = "seatNumber", nullable = false)
    private int seatNumber;

    /*
     * Column for the seat row.
     * The seat row cannot be NULL, and it indicates the row in which the seat is located.
     */
    @Column(name = "seatRow", nullable = false)
    private int seatRow;

    /*
     * Foreign key mapping to Showtime.
     * This column represents the showtime associated with this seat, ensuring that a seat is tied to a specific showtime.
     */
    @ManyToOne
    @JoinColumn(name = "showtimeId", nullable = false)
    private Showtime showtime;

    /*
     * Foreign key mapping to Ticket.
     * This column represents the ticket that is assigned to this seat, ensuring that a seat is linked to a specific ticket.
     */
    @ManyToOne
    @JoinColumn(name = "ticketId", nullable = false)
    private Ticket ticket;

    /*
     * Default constructor required by Hibernate for JPA entities.
     * This constructor is used by Hibernate when creating an instance of the Seat class.
     */
    public Seat() {
    }

    /*
     * Parameterized constructor to create a Seat instance with specific details.
     *
     * @param seatNumber The seat number within the row
     * @param seatRow The row number in which the seat is located
     * @param showtime The showtime associated with this seat
     * @param ticket The ticket assigned to this seat
     */
    public Seat(int seatNumber, int seatRow, Showtime showtime, Ticket ticket) {
        this.seatNumber = seatNumber;
        this.seatRow = seatRow;
        this.showtime = showtime;
        this.ticket = ticket;
    }

    /*
     * Retrieves the seat ID.
     * The seat ID is generated automatically by the database.
     *
     * @return The unique ID for the seat
     */
    public int getSeatId() {
        return seatId;
    }

    /*
     * Sets the seat ID.
     * This method is used to set the seat ID manually (usually for updates).
     *
     * @param seatId The seat ID to be set
     */
    public void setSeatId(int seatId) {
        this.seatId = seatId;
    }

    /*
     * Retrieves the seat number.
     * This is the number assigned to the seat within its row.
     *
     * @return The number of the seat
     */
    public int getSeatNumber() {
        return seatNumber;
    }

    /*
     * Sets the seat number.
     * This method is used to set the seat number within the row.
     *
     * @param seatNumber The seat number to be set
     */
    public void setSeatNumber(int seatNumber) {
        this.seatNumber = seatNumber;
    }

    /*
     * Retrieves the seat row.
     * This is the row where the seat is located.
     *
     * @return The row number of the seat
     */
    public int getSeatRow() {
        return seatRow;
    }

    /*
     * Sets the seat row.
     * This method is used to set the row number where the seat is located.
     *
     * @param seatRow The row number to be set
     */
    public void setSeatRow(int seatRow) {
        this.seatRow = seatRow;
    }

    /*
     * Retrieves the showtime associated with this seat.
     *
     * @return The showtime object representing the time the show is scheduled
     */
    public Showtime getShowtime() {
        return showtime;
    }

    /*
     * Sets the showtime associated with this seat.
     *
     * @param showtime The showtime object to be associated with this seat
     */
    public void setShowtime(Showtime showtime) {
        this.showtime = showtime;
    }

    /*
     * Sets the ticket associated with this seat.
     * This method links a specific ticket to the seat.
     *
     * @param ticket The ticket to be associated with the seat
     */
    public void setTicket(Ticket ticket) {
        this.ticket = ticket;
    }

    /*
     * Retrieves the ticket associated with this seat.
     *
     * @return The ticket object associated with the seat
     */
    public Ticket getTicket() {
        return this.ticket;
    }
}
