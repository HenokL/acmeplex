package com.acmeplex.model;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Column;

@Entity
public class User {

    /*
     * Primary key of the database table
     * The value of id will be automatically generated by the database when a new User entity is created
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private long id;

    /*
     * username column of the database table
     * The username can not be NULL
     * The length is limited to 100 characters
     */
    @Column(nullable = false, length = 100)
    private String username;

    /*
     * password column of the database table
     * the password can not be NULL
     * The length is limited to 25 characters
     */
    @Column(nullable = false, length = 25)
    private String password;

    /*
     * email column of the database table
     * the email can not NULL
     * the length is limited to 100 characters
     */
    @Column(nullable = false, length = 100)
    private String email;

    /*
     * firstName column of the User table
     * the firstName can not be NULL
     * the length is limited to 100 characters
     */
    @Column(nullable = false, length = 100)
    private String firstName;


    /*
     * lastName column of the User table
     * the lastName can not be NULL
     * the length is limited to 100 characters
     */
    @Column(nullable = false, length = 100)
    private String lastName;
    
     /*
     * isRegistered column of the User table
     * the registration status can not be NULL
     */
    @Column(nullable = true)
    private boolean isRegistered;

    /*
     * Default Constructor
     */
    public User() {
    }

    /*
     * Parameterized constructor
     */
    public User(String username, String password, String email, String firstName, String lastName,
            Boolean isRegistered) {
        this.username = username;
        this.password = password;
        this.email = email;
        this.firstName = firstName;
        this.lastName = lastName;
        this.isRegistered = isRegistered;
    }

    /*
     * Gets the ID value of the user
     */
    public long getId() {
        return id;
    }

    /*
     * Gets the first name of the user
     */
    public String getFirstName() {
        return firstName;
    }
    
    /*
     * Gets the last name of the user
     */
    public String getLastName() {
        return lastName;
    }

    /*
     * Gets the email  of the user
     */
    public String getEmail() {
        return email;
    }


    /*
     * Get boolean depending on if the user is registered or not
     * Returns True if the user is registered
     * Returns False if the user is not registered
     */
    public boolean getIsRegistered() {
        return isRegistered;
    }


};
